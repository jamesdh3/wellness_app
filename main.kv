#:import utils kivy.utils

WindowManager:
    MainWindow:
        name: 'main'
    SummStatScreen: 
        name : "summ_stats_screen" 
    TimerScreen:
        name : 'timer_screen' 
    LinePlotScreen: 
        name : 'line_plot_screen'
    StackedBoxPlotScreen: 
        name : 'box_plot_screen'
    TotalsBarPlotScreen: 
        name : 'bar_plot_total_screen' 


<MainWindow>:
    BoxLayout:
        canvas.before:
            Color:
                rgb: utils.get_color_from_hex(root.ui.hex_background)
            Rectangle: 
                size: self.size
        Label: 
            size_hint: 1, 1
            text:
                "Flow Time"
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])

    GridLayout:
        cols:3
        size_hint: 1, 0.25
        Button:
            text: "Log Time"
            background_color:
                utils.get_color_from_hex(root.ui.hex_main_color) 
            on_press: 
                root.ui.play_button_press()
            on_release:
                root.ui.play_button_release()
                app.root.current = "timer_screen"
                root.manager.transition.direction = "left" 
        Button: 
            text: "Summary" 
            background_color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            on_press: 
                root.ui.play_button_press()
            on_release: 
                root.ui.play_button_release()
                app.root.current="summ_stats_screen" 
                root.manager.transition.direction = "left" 
        Button:
            text: "Visualize"
            background_color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[2]) 
            on_press:
                root.ui.play_button_press()
            on_release:
                root.ui.play_button_release()
                app.root.current = "bar_plot_total_screen" 
                root.manager.transition.direction = "left"

<SummStatScreen>: 
    canvas.before: 
        Color:
            rgb: utils.get_color_from_hex(root.ui.hex_background)
        Rectangle: 
            size: self.size
    GridLayout: # back button 
        cols: 2
        size_hint: 0.1, 0.1 
        pos_hint: {'top': 1} 
        Button: 
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.ui.hex_background)
            text: 'Back' 
            color: 
                root.ui.hex_main_color
            on_press:
                root.ui.play_button_press()
            on_release:  
                root.ui.play_button_back()
                root.manager.transition.direction = 'right'
                root.manager.current = 'main'
    
    GridLayout: # activity name goes here 
        cols: 1 
        pos_hint: {'top': 0.9} 
        size_hint: (1, .1)  
        Label: 
            text: 'meditate' 
            
    GridLayout: # summary stats to display 
        pos_hint : {'top': 0.8} 
        canvas.before:
            Color:
                rgb: utils.get_color_from_hex(root.ui.hex_background)
            Rectangle: 
                size: self.size
        size_hint: 1, 0.7
        cols: 2 

        Label: # mean time acitivty 
            # text: 'avg time (sec): {}'.format(str(root.dm.fill_activity_data_holes('meditate')['time_elapsed'].mean()))
            # text: 'avg time (sec): {}'.format(root.dm.fill_activity_data_holes('meditate'))
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
        Label: # most time activity
            text: 'most time spent on {act}: {t} (sec). on day: {d}'.format(act='meditate', t=root.get_activity_mean('meditate'), d=root.get_activity_date_of_max('meditate'))
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
        Label: # longest streak activity 
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            text: 'longest streak stat' 
            # 'longest streak for activity {act}: {d} days'.format(act='meditate', d=root.get_consecutive_streak_by_activity('meditate'))
        Label: # temp 
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            text: 
                'standard deviation for activity {act}: {v}'.format(act='meditate', v=root.calculate_std('meditate'))

    GridLayout: # choose different activities 
        cols: 3
        pos_hint: {'top':0.1}
        size_hint: (1, 0.1) 
        Button: # 
            text: 'this is activity 1' 
        Button: 
            text: 'this is activity 2' 
        Button: 
            text: 'this is activity 3'

    


<TotalsBarPlotScreen>: 
    BoxLayout: 
        id: box_plot_total_fig
        size_hint_y: .8
        pos_hint: {'top':1} 
    
    BoxLayout: 
        cols: 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.ui.play_button_press()
            on_release:
                root.ui.play_button_back() 
                root.manager.current = 'main'
        
        Button: 
            id: next_plot_stacked_bar
            text: "Next Plot" 
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'line_plot_screen' 
                root.manager.transition.direction = 'left'


<LinePlotScreen>:     
    BoxLayout:
        id: line_plot_fig
        size_hint_y: .8
        pos_hint: {'top':1}

    BoxLayout:
        cols: 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.ui.play_button_press()
            on_release:
                root.ui.play_button_back()
                root.manager.current = 'bar_plot_total_screen'
        
        Button: 
            id: next_plot_stacked_bar
            text: "Next Plot" 
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'box_plot_screen' 
                root.manager.transition.direction = 'left'

    

<StackedBoxPlotScreen>: 
    BoxLayout:
        id: stacked_box_fig
        size_hint_y: .8
        pos_hint: {'top':1}

    BoxLayout:
        cols : 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.ui.play_button_press()
            on_release:
                root.ui.play_button_back()
                root.manager.current = 'line_plot_screen'
                root.manager.transition.direction = 'right' 


<TimerScreen>:
    canvas.before: 
        Color:
            rgb: utils.get_color_from_hex(root.UI.hex_background)
        Rectangle: 
            size: self.size
    
    GridLayout: 
        cols: 2
        size_hint: 0.1, 0.1 
        pos_hint: {'top': 1} 
        Button: 
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.UI.hex_background)
            text: 'Back' 
            color: 
                root.UI.hex_main_color
            on_press: 
                root.UI.play_button_press()
            on_release: 
                root.stop() 
                root.UI.play_button_back()
                root.manager.transition.direction = 'right'
                root.manager.current = 'main'
    
    GridLayout: 
        cols: 1
        pos_hint: {'top': .9} 
        size_hint: 1, 0.7
        Label:
            text: '<Image/Animation goes here>'
            color: root.UI.hex_main_color
            text_size : self.size 
            halign: 'center' 
            valign: 'middle' 
    
    GridLayout: 
        cols: 2 
        size_hint: 1, 0.1
        pos_hint: {'top': 0.3}
        TextInput:
            id: activity_name
            multiline: False 
        Label: 
            text : str(round(root.number)) 
            color : root.UI.hex_main_color 
            text_size : self.size 
            halign : 'center'
            valign : 'middle'  

    GridLayout: 
        cols: 3 
        size_hint: 1, 0.1 
        pos_hint: {'top' : 0.2} 
        Button:
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.UI.hex_background)
            color: 
                root.UI.hex_main_color
            text: 'Start'
            on_release: 
                root.start()
        Button:
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.UI.hex_background)
            color: 
                root.UI.hex_main_color
            text: 'Reset'
            on_release: root.number = 0
        Button:
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.UI.hex_background)
            color: 
                root.UI.hex_main_color
            text: 'Stop'
            on_press: root.stop()
    
    GridLayout: 
        cols: 1
        size_hint: 1, 0.1
        Button: 
            color: 
                root.UI.hex_main_color
            text: 'Save' 
            pos_hint: {'top': 0.1} 
            background_normal: ''
            background_color: 
                utils.get_color_from_hex(root.UI.hex_background)
            on_release: 
                root.stop() 
                root.update_and_save({root.FH.activity_col: activity_name.text, root.FH.time_col : root.number, root.FH.date_col : root.FH.date, root.FH.time_inserted : root.FH.time}) 


    


