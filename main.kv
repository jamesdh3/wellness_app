#:import utils kivy.utils

WindowManager:
    MainWindow:
        name: 'main'
    SummStatScreen: 
        name : "summ_stats_screen" 
    TimerScreen:
        name : 'timer_screen' 
    LinePlotScreen: 
        name : 'line_plot_screen'
    StackedBoxPlotScreen: 
        name : 'box_plot_screen'
    TotalsBarPlotScreen: 
        name : 'bar_plot_total_screen' 


<MainWindow>:
    BoxLayout:
        canvas.before:
            Color:
                rgb: utils.get_color_from_hex(root.ui.hex_background)
            Rectangle: 
                size: self.size
        Label: 
            size_hint: 1, 1
            text:
                "Flow Time"
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])

    GridLayout:
        cols:3
        size_hint: 1, 0.25
        Button:
            text: "LOG"
            background_color:
                utils.get_color_from_hex(root.ui.hex_main_color) 
            on_release: 
                app.root.current = "timer_screen"
                root.manager.transition.direction = "left" 
        Button: 
            text: "Summary" 
            background_color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            on_release: 
                app.root.current="summ_stats_screen" 
                root.manager.transition.direction = "left" 
        Button:
            text: "Visualize"
            background_color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[2]) 
            on_release:
                app.root.current = "bar_plot_total_screen" 
                root.manager.transition.direction = "left"

<SummStatScreen>: 
    GridLayout: 
        canvas.before:
            Color:
                rgb: utils.get_color_from_hex(root.ui.hex_background)
            Rectangle: 
                size: self.size
        size_hint: 1, 1
        cols: 2 

        Label: # mean time acitivty 
            text: 'avg time (sec): {}'.format(root.get_activity_mean('meditate'))
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
        Label: # most time activity
            text: 'most time spent on {act}: {t} (sec). on day: {d}'.format(act='meditate', t=root.get_activity_mean('meditate'), d=root.get_activity_date_of_max('meditate'))
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
        Label: # longest streak activity 
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            text: 'longest streak for activity {act}: {d} days'.format(act='meditate', d=root.get_consecutive_streak_by_activity('meditate'))
    BoxLayout: 
        size_hint: 1, 0.1
        Button: 
            text: 'Back' 
            background_color: 
                utils.get_color_from_hex(root.ui.hex_background)
            color: 
                utils.get_color_from_hex(root.ui.hex_analogous_colors[1])
            on_press: 
                root.manager.transition.direction = 'right'
                root.manager.current = 'main'

<TotalsBarPlotScreen>: 
    BoxLayout: 
        id: box_plot_total_fig
        size_hint_y: .8
        pos_hint: {'top':1} 
    
    BoxLayout: 
        cols: 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'main'
        
        Button: 
            id: next_plot_stacked_bar
            text: "Next Plot" 
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'line_plot_screen' 
                root.manager.transition.direction = 'left'


<LinePlotScreen>:     
    BoxLayout:
        id: line_plot_fig
        size_hint_y: .8
        pos_hint: {'top':1}

    BoxLayout:
        cols: 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'bar_plot_total_screen'
        
        Button: 
            id: next_plot_stacked_bar
            text: "Next Plot" 
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'box_plot_screen' 
                root.manager.transition.direction = 'left'

    

<StackedBoxPlotScreen>: 
    BoxLayout:
        id: stacked_box_fig
        size_hint_y: .8
        pos_hint: {'top':1}

    BoxLayout:
        cols : 2 

        Button: 
            id: stat_back 
            text: "Back"
            size_hint_y: .2 
            on_press: 
                root.manager.current = 'line_plot_screen'
                root.manager.transition.direction = 'right' 


<TimerScreen>:
    job: root.number 

    # Assigning the alignment to buttons
    BoxLayout
        
        orientation: 'vertical'
 
        # Create Button
         
        TextInput: 
            id: activity_name 
            multiline: False 

        Button:
            text: 'start'
            on_press: root.start()
             
        Button:
            text: 'stop'
            on_press: root.stop()
             
        Button:
            text: 'Reset'
            on_press: root.number = 0
        
        Button: 
            text: 'Save'
            on_press: 
                root.stop() 
                root.update_and_save({root.activity_col: activity_name.text, root.time_col : root.number, root.date_col : root.date, root.time_inserted : root.time})

        Button: 
            text: 'Back' 
            on_press: 
                root.stop() 
                root.manager.transition.direction = 'right'
                root.manager.current = 'main'

    # Create the Label
        Label:
            text: str(round(root.number))
            text_size: self.size
            halign: 'center'
            valign: 'middle'


    


